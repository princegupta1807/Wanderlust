<% layout('/layouts/boilerplate') %>
<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-12 col-lg-10">
      <h1 class="mb-4"><%= listing.title %></h1>

      <!-- Main Image -->
      <div class="show-card">
        <img
          src="<%= listing.image.url %>"
          class="show-img"
          alt="<%= listing.title %>"
        />
        <div class="card-body">
          <% if (listing.owner && listing.owner.username) { %>
          <p class="card-text">
            <i class="fas fa-user me-2"></i> Owned by
            <strong><%= listing.owner.username %></strong>
          </p>
          <% } %>

          <div class="mt-4">
            <h5>About this place</h5>
            <p class="card-text"><%= listing.description %></p>
          </div>

          <div class="mt-4">
            <h5>Price</h5>
            <p class="card-text">
              &#8377; <%= listing.price.toLocaleString("en-IN") %>
              <small class="text-muted">per night</small>
            </p>
          </div>

          <div class="mt-4">
            <h5>Location</h5>
            <p class="card-text">
              <i class="fas fa-map-marker-alt me-2 text-danger"></i>
              <%= listing.location %>, <%= listing.country %>
            </p>
          </div>
        </div>
      </div>

      <!-- Action Buttons -->
      <% if(currentUser && listing.owner &&
      <!-- Action Buttons -->
      currentUser._id.equals(listing.owner._id)) { %>
      <div class="btns">
        <a href="/listings/<%= listing._id %>/edit" class="btn btn-dark">
          <i class="fas fa-edit me-2"></i>Edit Listing
        </a>
        <form
          id="delete-listing-form"
          method="POST"
          action="/listings/<%= listing._id %>?_method=DELETE"
        >
          <button type="submit" class="btn btn-outline-danger">
            <i class="fas fa-trash-alt me-2"></i>Delete
          </button>
        </form>
      </div>
      <% } %>

      <!-- Reviews Section -->
      <div id="reviews">
        <div class="row justify-content-center">
          <div class="col-12 col-lg-10">
            <% if(currentUser) { %>
            <div class="review-form-container">
              <form
                id="review-form"
                action="/listings/<%= listing._id %>/reviews"
                method="POST"
                novalidate
                class="needs-validation"
              >
                <h4>Share Your Experience</h4>
                <div class="mb-4">
                  <label for="rating" class="form-label">Your Rating</label>
                  <div class="star-rating">
                    <fieldset class="starability-slot">
                      <input
                        type="radio"
                        id="no-rate"
                        class="input-no-rate"
                        name="review[rating]"
                        value="1"
                        checked
                        aria-label="No rating."
                      />
                      <input
                        type="radio"
                        id="first-rate1"
                        name="review[rating]"
                        value="1"
                      />
                      <label for="first-rate1" title="Terrible">1 star</label>
                      <input
                        type="radio"
                        id="first-rate2"
                        name="review[rating]"
                        value="2"
                      />
                      <label for="first-rate2" title="Not good">2 stars</label>
                      <input
                        type="radio"
                        id="first-rate3"
                        name="review[rating]"
                        value="3"
                      />
                      <label for="first-rate3" title="Average">3 stars</label>
                      <input
                        type="radio"
                        id="first-rate4"
                        name="review[rating]"
                        value="4"
                      />
                      <label for="first-rate4" title="Very good">4 stars</label>
                      <input
                        type="radio"
                        id="first-rate5"
                        name="review[rating]"
                        value="5"
                      />
                      <label for="first-rate5" title="Amazing">5 stars</label>
                    </fieldset>
                  </div>
                </div>
                <div class="mb-4">
                  <label for="comments" class="form-label">Your Review</label>
                  <textarea
                    name="review[comments]"
                    id="comments"
                    class="form-control"
                    rows="4"
                    placeholder="Share your experience with this place..."
                    required
                  ></textarea>
                  <div class="form-text">
                    Your honest review helps others make better decisions
                  </div>
                  <div class="invalid-feedback">
                    Please share your thoughts about this place
                  </div>
                </div>
                <div class="d-flex justify-content-end">
                  <button type="submit" class="btn btn-dark px-4">
                    <i class="fas fa-paper-plane me-2"></i>Submit Review
                  </button>
                </div>
              </form>
            </div>
            <% } %>

            <!-- Reviews List -->
            <% if(listing.reviews && listing.reviews.length > 0) { %>
            <div class="mt-5">
              <div
                class="d-flex justify-content-between align-items-center mb-4"
              >
                <h4 class="mb-0">Guest Reviews</h4>
                <span class="badge bg-primary"
                  ><%= listing.reviews.length %> reviews</span
                >
              </div>

              <div class="row">
                <% for(let review of listing.reviews) { %>
                <div class="col-12 col-md-6 mb-3">
                  <div class="review-card">
                    <div
                      class="d-flex justify-content-between align-items-center mb-2"
                    >
                      <h5 class="card-title mb-0">
                        <i class="fas fa-user-circle me-2"></i>
                        <%= review.author.username %>
                      </h5>
                      <div
                        class="starability-result"
                        data-rating="<%= review.rating %>"
                      ></div>
                    </div>
                    <p class="card-text"><%= review.comments %></p>
                    <div class="text-muted small">
                      <i class="far fa-clock me-1"></i>
                      <%= new Date(review.createdAt).toLocaleDateString('en-US',
                      { year: 'numeric', month: 'long', day: 'numeric' }) %>
                    </div>
                    <% if(currentUser &&
                    review.author._id.equals(currentUser._id)) { %>
                    <form
                      class="mt-3 delete-review-form"
                      method="POST"
                      action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE"
                      data-review-id="<%= review._id %>"
                    >
                      <button
                        type="submit"
                        class="btn btn-sm btn-outline-danger"
                      >
                        <i class="fas fa-trash-alt me-1"></i> Delete
                      </button>
                    </form>
                    <% } %>
                  </div>
                </div>
                <% } %>
              </div>
            </div>
            <% } else { %>
            <div class="text-center py-5">
              <i class="far fa-comment-dots fa-3x mb-3 text-muted"></i>
              <p class="text-muted">No reviews yet. Be the first to review!</p>
            </div>
            <% } %>
          </div>
        </div>
      </div>

      <!-- Map Section -->
      <div id="map-container">
        <div class="row justify-content-center">
          <div class="col-12 col-lg-10">
            <h3><i class="fas fa-map-marked-alt me-2"></i> Where you'll be</h3>
            <div class="mt-4">

              <div id="map" <% if (listing.title) { %>
                data-title="<%- listing.title %>" <% } %> <% if
                (listing.geometry && listing.geometry.coordinates &&
                listing.geometry.coordinates.length === 2) { %>
                data-coordinates='[<%- listing.geometry.coordinates[1] %>, <%-
                listing.geometry.coordinates[0] %>]' <% } %> >
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="/js/map.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Handle listing deletion with AJAX
        const deleteListingForm = document.getElementById(
          "delete-listing-form"
        );
        if (deleteListingForm) {
          deleteListingForm.addEventListener("submit", async function (e) {
            e.preventDefault();

            if (
              !confirm(
                "Are you sure you want to delete this listing? This action cannot be undone."
              )
            ) {
              return;
            }

            const submitBtn = this.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;

            try {
              // Show loading state
              submitBtn.disabled = true;
              submitBtn.innerHTML =
                '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';

              const response = await fetch(this.action, {
                method: "POST",
                headers: {
                  "X-Requested-With": "XMLHttpRequest",
                  Accept: "application/json",
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ _method: "DELETE" }),
              });

              const result = await response.json();

              if (result.success) {
                // Show success message
                showFlashMessage(
                  "success",
                  result.message || "Listing deleted successfully!"
                );

                // Redirect to listings page after a short delay
                setTimeout(() => {
                  window.location.href = "/listings";
                }, 1500);
              } else {
                // Show error message
                showFlashMessage(
                  "error",
                  result.message ||
                    "Failed to delete listing. Please try again."
                );
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnText;
              }
            } catch (error) {
              console.error("Error deleting listing:", error);
              showFlashMessage(
                "error",
                "An error occurred while deleting the listing."
              );
              submitBtn.disabled = false;
              submitBtn.innerHTML = originalBtnText;
            }
          });
        }

        // Handle review deletion with AJAX
        const deleteReviewForms = document.querySelectorAll(
          ".delete-review-form"
        );

        deleteReviewForms.forEach((form) => {
          form.addEventListener("submit", async function (e) {
            e.preventDefault();

            if (!confirm("Are you sure you want to delete this review?")) {
              return;
            }

            const submitBtn = this.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;

            try {
              // Show loading state
              submitBtn.disabled = true;
              submitBtn.innerHTML =
                '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';

              const response = await fetch(this.action, {
                method: "POST",
                headers: {
                  "X-Requested-With": "XMLHttpRequest",
                  Accept: "application/json",
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ _method: "DELETE" }),
              });

              const result = await response.json();

              if (result.success) {
                // Show success message
                showFlashMessage(
                  "success",
                  result.message || "Review deleted successfully!"
                );

                // Remove the review from the DOM
                const reviewCard = this.closest(".col-12.col-md-6.mb-3");
                if (reviewCard) {
                  reviewCard.remove();
                }
              } else {
                // Show error message
                showFlashMessage(
                  "error",
                  result.message || "Failed to delete review. Please try again."
                );
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalBtnText;
              }
            } catch (error) {
              console.error("Error deleting review:", error);
              showFlashMessage(
                "error",
                "An error occurred while deleting the review."
              );
              submitBtn.disabled = false;
              submitBtn.innerHTML = originalBtnText;
            }
          });
        });

        // Function to show flash messages
        function showFlashMessage(type, message) {
          const flashContainer = document.createElement("div");
          flashContainer.className = "flash-messages";

          const alertDiv = document.createElement("div");
          alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
          alertDiv.role = "alert";
          alertDiv.innerHTML = `
            <i class="fas fa-${
              type === "success" ? "check" : "exclamation"
            }-circle me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;

          // Add animation styles
          alertDiv.style.opacity = "0";
          alertDiv.style.transform = "translateX(100%)";
          alertDiv.style.transition = "opacity 0.3s ease, transform 0.3s ease";

          flashContainer.appendChild(alertDiv);
          document.body.appendChild(flashContainer);

          // Trigger reflow to ensure styles are applied before animating
          void alertDiv.offsetWidth;

          // Animate in
          alertDiv.style.opacity = "1";
          alertDiv.style.transform = "translateX(0)";

          // Auto-dismiss after 5 seconds
          setTimeout(() => {
            const bsAlert = new bootstrap.Alert(alertDiv);
            bsAlert.close();
          }, 5000);
        }
      });
    </script>
  </div>
</div>
